// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ai.proto

#include "ai.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_ai_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ai_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PictureDataParam;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_ai_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_EmployeeInfo;
}  // namespace protobuf_ai_2eproto
namespace rpc {
class RegParamDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RegParam>
      _instance;
} _RegParam_default_instance_;
class RegReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RegReply>
      _instance;
} _RegReply_default_instance_;
class EmployeeInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EmployeeInfo>
      _instance;
} _EmployeeInfo_default_instance_;
class EmployeesParamDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EmployeesParam>
      _instance;
} _EmployeesParam_default_instance_;
class ImportReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ImportReply>
      _instance;
} _ImportReply_default_instance_;
class PictureDataParamDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PictureDataParam>
      _instance;
} _PictureDataParam_default_instance_;
class CheckReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CheckReply>
      _instance;
} _CheckReply_default_instance_;
}  // namespace rpc
namespace protobuf_ai_2eproto {
static void InitDefaultsRegParam() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpc::_RegParam_default_instance_;
    new (ptr) ::rpc::RegParam();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpc::RegParam::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RegParam =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRegParam}, {
      &protobuf_ai_2eproto::scc_info_PictureDataParam.base,}};

static void InitDefaultsRegReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpc::_RegReply_default_instance_;
    new (ptr) ::rpc::RegReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpc::RegReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RegReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRegReply}, {}};

static void InitDefaultsEmployeeInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpc::_EmployeeInfo_default_instance_;
    new (ptr) ::rpc::EmployeeInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpc::EmployeeInfo::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_EmployeeInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsEmployeeInfo}, {
      &protobuf_ai_2eproto::scc_info_PictureDataParam.base,}};

static void InitDefaultsEmployeesParam() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpc::_EmployeesParam_default_instance_;
    new (ptr) ::rpc::EmployeesParam();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpc::EmployeesParam::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_EmployeesParam =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsEmployeesParam}, {
      &protobuf_ai_2eproto::scc_info_EmployeeInfo.base,}};

static void InitDefaultsImportReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpc::_ImportReply_default_instance_;
    new (ptr) ::rpc::ImportReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpc::ImportReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ImportReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsImportReply}, {
      &protobuf_ai_2eproto::scc_info_EmployeeInfo.base,}};

static void InitDefaultsPictureDataParam() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpc::_PictureDataParam_default_instance_;
    new (ptr) ::rpc::PictureDataParam();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpc::PictureDataParam::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PictureDataParam =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPictureDataParam}, {}};

static void InitDefaultsCheckReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rpc::_CheckReply_default_instance_;
    new (ptr) ::rpc::CheckReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rpc::CheckReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CheckReply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCheckReply}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_RegParam.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RegReply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EmployeeInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EmployeesParam.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ImportReply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PictureDataParam.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CheckReply.base);
}

::google::protobuf::Metadata file_level_metadata[7];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpc::RegParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpc::RegParam, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpc::RegParam, login_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpc::RegParam, employee_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpc::RegParam, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpc::RegParam, photo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpc::RegReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpc::RegReply, is_success_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpc::EmployeeInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpc::EmployeeInfo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpc::EmployeeInfo, login_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpc::EmployeeInfo, employee_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpc::EmployeeInfo, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpc::EmployeeInfo, photos_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpc::EmployeesParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpc::EmployeesParam, employees_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpc::ImportReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpc::ImportReply, is_success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpc::ImportReply, employees_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpc::PictureDataParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpc::PictureDataParam, photo_width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpc::PictureDataParam, photo_height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpc::PictureDataParam, format_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpc::PictureDataParam, photo_datas_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpc::PictureDataParam, photo_url_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpc::CheckReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rpc::CheckReply, is_face_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::rpc::RegParam)},
  { 10, -1, sizeof(::rpc::RegReply)},
  { 16, -1, sizeof(::rpc::EmployeeInfo)},
  { 26, -1, sizeof(::rpc::EmployeesParam)},
  { 32, -1, sizeof(::rpc::ImportReply)},
  { 39, -1, sizeof(::rpc::PictureDataParam)},
  { 49, -1, sizeof(::rpc::CheckReply)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpc::_RegParam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpc::_RegReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpc::_EmployeeInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpc::_EmployeesParam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpc::_ImportReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpc::_PictureDataParam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rpc::_CheckReply_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "ai.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\010ai.proto\022\003rpc\"x\n\010RegParam\022\014\n\004name\030\001 \001("
      "\t\022\022\n\nlogin_name\030\002 \001(\t\022\023\n\013employee_id\030\003 \001"
      "(\t\022\017\n\007user_id\030\004 \001(\004\022$\n\005photo\030\005 \001(\0132\025.rpc"
      ".PictureDataParam\"\036\n\010RegReply\022\022\n\nis_succ"
      "ess\030\001 \001(\010\"}\n\014EmployeeInfo\022\014\n\004name\030\001 \001(\t\022"
      "\022\n\nlogin_name\030\002 \001(\t\022\023\n\013employee_id\030\003 \001(\t"
      "\022\017\n\007user_id\030\004 \001(\004\022%\n\006photos\030\005 \003(\0132\025.rpc."
      "PictureDataParam\"6\n\016EmployeesParam\022$\n\tem"
      "ployees\030\001 \003(\0132\021.rpc.EmployeeInfo\"G\n\013Impo"
      "rtReply\022\022\n\nis_success\030\001 \001(\010\022$\n\temployees"
      "\030\002 \003(\0132\021.rpc.EmployeeInfo\"u\n\020PictureData"
      "Param\022\023\n\013photo_width\030\001 \001(\r\022\024\n\014photo_heig"
      "ht\030\002 \001(\r\022\016\n\006format\030\003 \001(\r\022\023\n\013photo_datas\030"
      "\004 \001(\014\022\021\n\tphoto_url\030\005 \001(\t\"\035\n\nCheckReply\022\017"
      "\n\007is_face\030\001 \001(\0102\360\001\n\tLonganRpc\0225\n\tFaceChe"
      "ck\022\025.rpc.PictureDataParam\032\017.rpc.CheckRep"
      "ly\"\000\022@\n\025FacesInfoBatchImports\022\023.rpc.Empl"
      "oyeesParam\032\020.rpc.ImportReply\"\000\022:\n\017Update"
      "FacesInfo\022\023.rpc.EmployeesParam\032\020.rpc.Imp"
      "ortReply\"\000\022.\n\014RegisterFace\022\r.rpc.RegPara"
      "m\032\r.rpc.RegReply\"\000B\022\n\016com.longan.rpcP\001b\006"
      "proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 846);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ai.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_ai_2eproto
namespace rpc {

// ===================================================================

void RegParam::InitAsDefaultInstance() {
  ::rpc::_RegParam_default_instance_._instance.get_mutable()->photo_ = const_cast< ::rpc::PictureDataParam*>(
      ::rpc::PictureDataParam::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegParam::kNameFieldNumber;
const int RegParam::kLoginNameFieldNumber;
const int RegParam::kEmployeeIdFieldNumber;
const int RegParam::kUserIdFieldNumber;
const int RegParam::kPhotoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegParam::RegParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ai_2eproto::scc_info_RegParam.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpc.RegParam)
}
RegParam::RegParam(const RegParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  login_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.login_name().size() > 0) {
    login_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.login_name_);
  }
  employee_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.employee_id().size() > 0) {
    employee_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.employee_id_);
  }
  if (from.has_photo()) {
    photo_ = new ::rpc::PictureDataParam(*from.photo_);
  } else {
    photo_ = NULL;
  }
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:rpc.RegParam)
}

void RegParam::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  login_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  employee_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&photo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_id_) -
      reinterpret_cast<char*>(&photo_)) + sizeof(user_id_));
}

RegParam::~RegParam() {
  // @@protoc_insertion_point(destructor:rpc.RegParam)
  SharedDtor();
}

void RegParam::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  login_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  employee_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete photo_;
}

void RegParam::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RegParam::descriptor() {
  ::protobuf_ai_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ai_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegParam& RegParam::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ai_2eproto::scc_info_RegParam.base);
  return *internal_default_instance();
}


void RegParam::Clear() {
// @@protoc_insertion_point(message_clear_start:rpc.RegParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  login_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  employee_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && photo_ != NULL) {
    delete photo_;
  }
  photo_ = NULL;
  user_id_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool RegParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpc.RegParam)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpc.RegParam.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string login_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_login_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->login_name().data(), static_cast<int>(this->login_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpc.RegParam.login_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string employee_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_employee_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->employee_id().data(), static_cast<int>(this->employee_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpc.RegParam.employee_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 user_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .rpc.PictureDataParam photo = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_photo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpc.RegParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpc.RegParam)
  return false;
#undef DO_
}

void RegParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpc.RegParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpc.RegParam.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string login_name = 2;
  if (this->login_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->login_name().data(), static_cast<int>(this->login_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpc.RegParam.login_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->login_name(), output);
  }

  // string employee_id = 3;
  if (this->employee_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->employee_id().data(), static_cast<int>(this->employee_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpc.RegParam.employee_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->employee_id(), output);
  }

  // uint64 user_id = 4;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->user_id(), output);
  }

  // .rpc.PictureDataParam photo = 5;
  if (this->has_photo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_photo(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpc.RegParam)
}

::google::protobuf::uint8* RegParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpc.RegParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpc.RegParam.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string login_name = 2;
  if (this->login_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->login_name().data(), static_cast<int>(this->login_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpc.RegParam.login_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->login_name(), target);
  }

  // string employee_id = 3;
  if (this->employee_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->employee_id().data(), static_cast<int>(this->employee_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpc.RegParam.employee_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->employee_id(), target);
  }

  // uint64 user_id = 4;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->user_id(), target);
  }

  // .rpc.PictureDataParam photo = 5;
  if (this->has_photo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_photo(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpc.RegParam)
  return target;
}

size_t RegParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpc.RegParam)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string login_name = 2;
  if (this->login_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->login_name());
  }

  // string employee_id = 3;
  if (this->employee_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->employee_id());
  }

  // .rpc.PictureDataParam photo = 5;
  if (this->has_photo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *photo_);
  }

  // uint64 user_id = 4;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpc.RegParam)
  GOOGLE_DCHECK_NE(&from, this);
  const RegParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpc.RegParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpc.RegParam)
    MergeFrom(*source);
  }
}

void RegParam::MergeFrom(const RegParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpc.RegParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.login_name().size() > 0) {

    login_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.login_name_);
  }
  if (from.employee_id().size() > 0) {

    employee_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.employee_id_);
  }
  if (from.has_photo()) {
    mutable_photo()->::rpc::PictureDataParam::MergeFrom(from.photo());
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
}

void RegParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpc.RegParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegParam::CopyFrom(const RegParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpc.RegParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegParam::IsInitialized() const {
  return true;
}

void RegParam::Swap(RegParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegParam::InternalSwap(RegParam* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  login_name_.Swap(&other->login_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  employee_id_.Swap(&other->employee_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(photo_, other->photo_);
  swap(user_id_, other->user_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RegParam::GetMetadata() const {
  protobuf_ai_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ai_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RegReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegReply::kIsSuccessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegReply::RegReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ai_2eproto::scc_info_RegReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpc.RegReply)
}
RegReply::RegReply(const RegReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  is_success_ = from.is_success_;
  // @@protoc_insertion_point(copy_constructor:rpc.RegReply)
}

void RegReply::SharedCtor() {
  is_success_ = false;
}

RegReply::~RegReply() {
  // @@protoc_insertion_point(destructor:rpc.RegReply)
  SharedDtor();
}

void RegReply::SharedDtor() {
}

void RegReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RegReply::descriptor() {
  ::protobuf_ai_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ai_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegReply& RegReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ai_2eproto::scc_info_RegReply.base);
  return *internal_default_instance();
}


void RegReply::Clear() {
// @@protoc_insertion_point(message_clear_start:rpc.RegReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  is_success_ = false;
  _internal_metadata_.Clear();
}

bool RegReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpc.RegReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpc.RegReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpc.RegReply)
  return false;
#undef DO_
}

void RegReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpc.RegReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_success = 1;
  if (this->is_success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->is_success(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpc.RegReply)
}

::google::protobuf::uint8* RegReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpc.RegReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_success = 1;
  if (this->is_success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->is_success(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpc.RegReply)
  return target;
}

size_t RegReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpc.RegReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool is_success = 1;
  if (this->is_success() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpc.RegReply)
  GOOGLE_DCHECK_NE(&from, this);
  const RegReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpc.RegReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpc.RegReply)
    MergeFrom(*source);
  }
}

void RegReply::MergeFrom(const RegReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpc.RegReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.is_success() != 0) {
    set_is_success(from.is_success());
  }
}

void RegReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpc.RegReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegReply::CopyFrom(const RegReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpc.RegReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegReply::IsInitialized() const {
  return true;
}

void RegReply::Swap(RegReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegReply::InternalSwap(RegReply* other) {
  using std::swap;
  swap(is_success_, other->is_success_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RegReply::GetMetadata() const {
  protobuf_ai_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ai_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EmployeeInfo::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EmployeeInfo::kNameFieldNumber;
const int EmployeeInfo::kLoginNameFieldNumber;
const int EmployeeInfo::kEmployeeIdFieldNumber;
const int EmployeeInfo::kUserIdFieldNumber;
const int EmployeeInfo::kPhotosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EmployeeInfo::EmployeeInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ai_2eproto::scc_info_EmployeeInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpc.EmployeeInfo)
}
EmployeeInfo::EmployeeInfo(const EmployeeInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      photos_(from.photos_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  login_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.login_name().size() > 0) {
    login_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.login_name_);
  }
  employee_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.employee_id().size() > 0) {
    employee_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.employee_id_);
  }
  user_id_ = from.user_id_;
  // @@protoc_insertion_point(copy_constructor:rpc.EmployeeInfo)
}

void EmployeeInfo::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  login_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  employee_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_ = GOOGLE_ULONGLONG(0);
}

EmployeeInfo::~EmployeeInfo() {
  // @@protoc_insertion_point(destructor:rpc.EmployeeInfo)
  SharedDtor();
}

void EmployeeInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  login_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  employee_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EmployeeInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EmployeeInfo::descriptor() {
  ::protobuf_ai_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ai_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EmployeeInfo& EmployeeInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ai_2eproto::scc_info_EmployeeInfo.base);
  return *internal_default_instance();
}


void EmployeeInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:rpc.EmployeeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  photos_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  login_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  employee_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool EmployeeInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpc.EmployeeInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpc.EmployeeInfo.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string login_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_login_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->login_name().data(), static_cast<int>(this->login_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpc.EmployeeInfo.login_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string employee_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_employee_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->employee_id().data(), static_cast<int>(this->employee_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpc.EmployeeInfo.employee_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 user_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .rpc.PictureDataParam photos = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_photos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpc.EmployeeInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpc.EmployeeInfo)
  return false;
#undef DO_
}

void EmployeeInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpc.EmployeeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpc.EmployeeInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string login_name = 2;
  if (this->login_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->login_name().data(), static_cast<int>(this->login_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpc.EmployeeInfo.login_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->login_name(), output);
  }

  // string employee_id = 3;
  if (this->employee_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->employee_id().data(), static_cast<int>(this->employee_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpc.EmployeeInfo.employee_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->employee_id(), output);
  }

  // uint64 user_id = 4;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->user_id(), output);
  }

  // repeated .rpc.PictureDataParam photos = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->photos_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->photos(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpc.EmployeeInfo)
}

::google::protobuf::uint8* EmployeeInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpc.EmployeeInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpc.EmployeeInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string login_name = 2;
  if (this->login_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->login_name().data(), static_cast<int>(this->login_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpc.EmployeeInfo.login_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->login_name(), target);
  }

  // string employee_id = 3;
  if (this->employee_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->employee_id().data(), static_cast<int>(this->employee_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpc.EmployeeInfo.employee_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->employee_id(), target);
  }

  // uint64 user_id = 4;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->user_id(), target);
  }

  // repeated .rpc.PictureDataParam photos = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->photos_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->photos(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpc.EmployeeInfo)
  return target;
}

size_t EmployeeInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpc.EmployeeInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .rpc.PictureDataParam photos = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->photos_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->photos(static_cast<int>(i)));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string login_name = 2;
  if (this->login_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->login_name());
  }

  // string employee_id = 3;
  if (this->employee_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->employee_id());
  }

  // uint64 user_id = 4;
  if (this->user_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EmployeeInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpc.EmployeeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const EmployeeInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EmployeeInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpc.EmployeeInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpc.EmployeeInfo)
    MergeFrom(*source);
  }
}

void EmployeeInfo::MergeFrom(const EmployeeInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpc.EmployeeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  photos_.MergeFrom(from.photos_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.login_name().size() > 0) {

    login_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.login_name_);
  }
  if (from.employee_id().size() > 0) {

    employee_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.employee_id_);
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
}

void EmployeeInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpc.EmployeeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EmployeeInfo::CopyFrom(const EmployeeInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpc.EmployeeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EmployeeInfo::IsInitialized() const {
  return true;
}

void EmployeeInfo::Swap(EmployeeInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EmployeeInfo::InternalSwap(EmployeeInfo* other) {
  using std::swap;
  CastToBase(&photos_)->InternalSwap(CastToBase(&other->photos_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  login_name_.Swap(&other->login_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  employee_id_.Swap(&other->employee_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(user_id_, other->user_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EmployeeInfo::GetMetadata() const {
  protobuf_ai_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ai_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EmployeesParam::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EmployeesParam::kEmployeesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EmployeesParam::EmployeesParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ai_2eproto::scc_info_EmployeesParam.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpc.EmployeesParam)
}
EmployeesParam::EmployeesParam(const EmployeesParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      employees_(from.employees_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:rpc.EmployeesParam)
}

void EmployeesParam::SharedCtor() {
}

EmployeesParam::~EmployeesParam() {
  // @@protoc_insertion_point(destructor:rpc.EmployeesParam)
  SharedDtor();
}

void EmployeesParam::SharedDtor() {
}

void EmployeesParam::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EmployeesParam::descriptor() {
  ::protobuf_ai_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ai_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EmployeesParam& EmployeesParam::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ai_2eproto::scc_info_EmployeesParam.base);
  return *internal_default_instance();
}


void EmployeesParam::Clear() {
// @@protoc_insertion_point(message_clear_start:rpc.EmployeesParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  employees_.Clear();
  _internal_metadata_.Clear();
}

bool EmployeesParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpc.EmployeesParam)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .rpc.EmployeeInfo employees = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_employees()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpc.EmployeesParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpc.EmployeesParam)
  return false;
#undef DO_
}

void EmployeesParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpc.EmployeesParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .rpc.EmployeeInfo employees = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->employees_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->employees(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpc.EmployeesParam)
}

::google::protobuf::uint8* EmployeesParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpc.EmployeesParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .rpc.EmployeeInfo employees = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->employees_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->employees(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpc.EmployeesParam)
  return target;
}

size_t EmployeesParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpc.EmployeesParam)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .rpc.EmployeeInfo employees = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->employees_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->employees(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EmployeesParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpc.EmployeesParam)
  GOOGLE_DCHECK_NE(&from, this);
  const EmployeesParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EmployeesParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpc.EmployeesParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpc.EmployeesParam)
    MergeFrom(*source);
  }
}

void EmployeesParam::MergeFrom(const EmployeesParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpc.EmployeesParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  employees_.MergeFrom(from.employees_);
}

void EmployeesParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpc.EmployeesParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EmployeesParam::CopyFrom(const EmployeesParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpc.EmployeesParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EmployeesParam::IsInitialized() const {
  return true;
}

void EmployeesParam::Swap(EmployeesParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EmployeesParam::InternalSwap(EmployeesParam* other) {
  using std::swap;
  CastToBase(&employees_)->InternalSwap(CastToBase(&other->employees_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EmployeesParam::GetMetadata() const {
  protobuf_ai_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ai_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ImportReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImportReply::kIsSuccessFieldNumber;
const int ImportReply::kEmployeesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImportReply::ImportReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ai_2eproto::scc_info_ImportReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpc.ImportReply)
}
ImportReply::ImportReply(const ImportReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      employees_(from.employees_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  is_success_ = from.is_success_;
  // @@protoc_insertion_point(copy_constructor:rpc.ImportReply)
}

void ImportReply::SharedCtor() {
  is_success_ = false;
}

ImportReply::~ImportReply() {
  // @@protoc_insertion_point(destructor:rpc.ImportReply)
  SharedDtor();
}

void ImportReply::SharedDtor() {
}

void ImportReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ImportReply::descriptor() {
  ::protobuf_ai_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ai_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ImportReply& ImportReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ai_2eproto::scc_info_ImportReply.base);
  return *internal_default_instance();
}


void ImportReply::Clear() {
// @@protoc_insertion_point(message_clear_start:rpc.ImportReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  employees_.Clear();
  is_success_ = false;
  _internal_metadata_.Clear();
}

bool ImportReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpc.ImportReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .rpc.EmployeeInfo employees = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_employees()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpc.ImportReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpc.ImportReply)
  return false;
#undef DO_
}

void ImportReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpc.ImportReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_success = 1;
  if (this->is_success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->is_success(), output);
  }

  // repeated .rpc.EmployeeInfo employees = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->employees_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->employees(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpc.ImportReply)
}

::google::protobuf::uint8* ImportReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpc.ImportReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_success = 1;
  if (this->is_success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->is_success(), target);
  }

  // repeated .rpc.EmployeeInfo employees = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->employees_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->employees(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpc.ImportReply)
  return target;
}

size_t ImportReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpc.ImportReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .rpc.EmployeeInfo employees = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->employees_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->employees(static_cast<int>(i)));
    }
  }

  // bool is_success = 1;
  if (this->is_success() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImportReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpc.ImportReply)
  GOOGLE_DCHECK_NE(&from, this);
  const ImportReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImportReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpc.ImportReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpc.ImportReply)
    MergeFrom(*source);
  }
}

void ImportReply::MergeFrom(const ImportReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpc.ImportReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  employees_.MergeFrom(from.employees_);
  if (from.is_success() != 0) {
    set_is_success(from.is_success());
  }
}

void ImportReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpc.ImportReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImportReply::CopyFrom(const ImportReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpc.ImportReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImportReply::IsInitialized() const {
  return true;
}

void ImportReply::Swap(ImportReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ImportReply::InternalSwap(ImportReply* other) {
  using std::swap;
  CastToBase(&employees_)->InternalSwap(CastToBase(&other->employees_));
  swap(is_success_, other->is_success_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ImportReply::GetMetadata() const {
  protobuf_ai_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ai_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PictureDataParam::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PictureDataParam::kPhotoWidthFieldNumber;
const int PictureDataParam::kPhotoHeightFieldNumber;
const int PictureDataParam::kFormatFieldNumber;
const int PictureDataParam::kPhotoDatasFieldNumber;
const int PictureDataParam::kPhotoUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PictureDataParam::PictureDataParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ai_2eproto::scc_info_PictureDataParam.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpc.PictureDataParam)
}
PictureDataParam::PictureDataParam(const PictureDataParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  photo_datas_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.photo_datas().size() > 0) {
    photo_datas_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.photo_datas_);
  }
  photo_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.photo_url().size() > 0) {
    photo_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.photo_url_);
  }
  ::memcpy(&photo_width_, &from.photo_width_,
    static_cast<size_t>(reinterpret_cast<char*>(&format_) -
    reinterpret_cast<char*>(&photo_width_)) + sizeof(format_));
  // @@protoc_insertion_point(copy_constructor:rpc.PictureDataParam)
}

void PictureDataParam::SharedCtor() {
  photo_datas_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  photo_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&photo_width_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&format_) -
      reinterpret_cast<char*>(&photo_width_)) + sizeof(format_));
}

PictureDataParam::~PictureDataParam() {
  // @@protoc_insertion_point(destructor:rpc.PictureDataParam)
  SharedDtor();
}

void PictureDataParam::SharedDtor() {
  photo_datas_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  photo_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PictureDataParam::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PictureDataParam::descriptor() {
  ::protobuf_ai_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ai_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PictureDataParam& PictureDataParam::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ai_2eproto::scc_info_PictureDataParam.base);
  return *internal_default_instance();
}


void PictureDataParam::Clear() {
// @@protoc_insertion_point(message_clear_start:rpc.PictureDataParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  photo_datas_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  photo_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&photo_width_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&format_) -
      reinterpret_cast<char*>(&photo_width_)) + sizeof(format_));
  _internal_metadata_.Clear();
}

bool PictureDataParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpc.PictureDataParam)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 photo_width = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &photo_width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 photo_height = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &photo_height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 format = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &format_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes photo_datas = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_photo_datas()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string photo_url = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_photo_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->photo_url().data(), static_cast<int>(this->photo_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rpc.PictureDataParam.photo_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpc.PictureDataParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpc.PictureDataParam)
  return false;
#undef DO_
}

void PictureDataParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpc.PictureDataParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 photo_width = 1;
  if (this->photo_width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->photo_width(), output);
  }

  // uint32 photo_height = 2;
  if (this->photo_height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->photo_height(), output);
  }

  // uint32 format = 3;
  if (this->format() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->format(), output);
  }

  // bytes photo_datas = 4;
  if (this->photo_datas().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->photo_datas(), output);
  }

  // string photo_url = 5;
  if (this->photo_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->photo_url().data(), static_cast<int>(this->photo_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpc.PictureDataParam.photo_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->photo_url(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpc.PictureDataParam)
}

::google::protobuf::uint8* PictureDataParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpc.PictureDataParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 photo_width = 1;
  if (this->photo_width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->photo_width(), target);
  }

  // uint32 photo_height = 2;
  if (this->photo_height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->photo_height(), target);
  }

  // uint32 format = 3;
  if (this->format() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->format(), target);
  }

  // bytes photo_datas = 4;
  if (this->photo_datas().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->photo_datas(), target);
  }

  // string photo_url = 5;
  if (this->photo_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->photo_url().data(), static_cast<int>(this->photo_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rpc.PictureDataParam.photo_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->photo_url(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpc.PictureDataParam)
  return target;
}

size_t PictureDataParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpc.PictureDataParam)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes photo_datas = 4;
  if (this->photo_datas().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->photo_datas());
  }

  // string photo_url = 5;
  if (this->photo_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->photo_url());
  }

  // uint32 photo_width = 1;
  if (this->photo_width() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->photo_width());
  }

  // uint32 photo_height = 2;
  if (this->photo_height() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->photo_height());
  }

  // uint32 format = 3;
  if (this->format() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->format());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PictureDataParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpc.PictureDataParam)
  GOOGLE_DCHECK_NE(&from, this);
  const PictureDataParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PictureDataParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpc.PictureDataParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpc.PictureDataParam)
    MergeFrom(*source);
  }
}

void PictureDataParam::MergeFrom(const PictureDataParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpc.PictureDataParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.photo_datas().size() > 0) {

    photo_datas_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.photo_datas_);
  }
  if (from.photo_url().size() > 0) {

    photo_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.photo_url_);
  }
  if (from.photo_width() != 0) {
    set_photo_width(from.photo_width());
  }
  if (from.photo_height() != 0) {
    set_photo_height(from.photo_height());
  }
  if (from.format() != 0) {
    set_format(from.format());
  }
}

void PictureDataParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpc.PictureDataParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PictureDataParam::CopyFrom(const PictureDataParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpc.PictureDataParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PictureDataParam::IsInitialized() const {
  return true;
}

void PictureDataParam::Swap(PictureDataParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PictureDataParam::InternalSwap(PictureDataParam* other) {
  using std::swap;
  photo_datas_.Swap(&other->photo_datas_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  photo_url_.Swap(&other->photo_url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(photo_width_, other->photo_width_);
  swap(photo_height_, other->photo_height_);
  swap(format_, other->format_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PictureDataParam::GetMetadata() const {
  protobuf_ai_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ai_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CheckReply::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckReply::kIsFaceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckReply::CheckReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ai_2eproto::scc_info_CheckReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rpc.CheckReply)
}
CheckReply::CheckReply(const CheckReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  is_face_ = from.is_face_;
  // @@protoc_insertion_point(copy_constructor:rpc.CheckReply)
}

void CheckReply::SharedCtor() {
  is_face_ = false;
}

CheckReply::~CheckReply() {
  // @@protoc_insertion_point(destructor:rpc.CheckReply)
  SharedDtor();
}

void CheckReply::SharedDtor() {
}

void CheckReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CheckReply::descriptor() {
  ::protobuf_ai_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ai_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CheckReply& CheckReply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ai_2eproto::scc_info_CheckReply.base);
  return *internal_default_instance();
}


void CheckReply::Clear() {
// @@protoc_insertion_point(message_clear_start:rpc.CheckReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  is_face_ = false;
  _internal_metadata_.Clear();
}

bool CheckReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rpc.CheckReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_face = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_face_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rpc.CheckReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rpc.CheckReply)
  return false;
#undef DO_
}

void CheckReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rpc.CheckReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_face = 1;
  if (this->is_face() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->is_face(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rpc.CheckReply)
}

::google::protobuf::uint8* CheckReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rpc.CheckReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_face = 1;
  if (this->is_face() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->is_face(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rpc.CheckReply)
  return target;
}

size_t CheckReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rpc.CheckReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool is_face = 1;
  if (this->is_face() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CheckReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rpc.CheckReply)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rpc.CheckReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rpc.CheckReply)
    MergeFrom(*source);
  }
}

void CheckReply::MergeFrom(const CheckReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rpc.CheckReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.is_face() != 0) {
    set_is_face(from.is_face());
  }
}

void CheckReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rpc.CheckReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckReply::CopyFrom(const CheckReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rpc.CheckReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckReply::IsInitialized() const {
  return true;
}

void CheckReply::Swap(CheckReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CheckReply::InternalSwap(CheckReply* other) {
  using std::swap;
  swap(is_face_, other->is_face_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CheckReply::GetMetadata() const {
  protobuf_ai_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ai_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace rpc
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpc::RegParam* Arena::CreateMaybeMessage< ::rpc::RegParam >(Arena* arena) {
  return Arena::CreateInternal< ::rpc::RegParam >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpc::RegReply* Arena::CreateMaybeMessage< ::rpc::RegReply >(Arena* arena) {
  return Arena::CreateInternal< ::rpc::RegReply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpc::EmployeeInfo* Arena::CreateMaybeMessage< ::rpc::EmployeeInfo >(Arena* arena) {
  return Arena::CreateInternal< ::rpc::EmployeeInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpc::EmployeesParam* Arena::CreateMaybeMessage< ::rpc::EmployeesParam >(Arena* arena) {
  return Arena::CreateInternal< ::rpc::EmployeesParam >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpc::ImportReply* Arena::CreateMaybeMessage< ::rpc::ImportReply >(Arena* arena) {
  return Arena::CreateInternal< ::rpc::ImportReply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpc::PictureDataParam* Arena::CreateMaybeMessage< ::rpc::PictureDataParam >(Arena* arena) {
  return Arena::CreateInternal< ::rpc::PictureDataParam >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rpc::CheckReply* Arena::CreateMaybeMessage< ::rpc::CheckReply >(Arena* arena) {
  return Arena::CreateInternal< ::rpc::CheckReply >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
